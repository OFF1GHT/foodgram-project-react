name: Main Foodgram workflow 
 
on: 
  push: 
    branches: 
      - '*'   

jobs:

  tests:
    name: PEP8 check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip 
          pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
          cd backend/
          pip install -r requirements.txt
      - name: Test with flake8
        run: |
          python -m flake8 backend

  deploy: 
    runs-on: ubuntu-latest 
    needs:  
      - build_and_push_to_docker_hub 
      - build_frontend_and_push_to_docker_hub 
      - build_gateway_and_push_to_docker_hub 
    steps: 
    - name: Checkout repo 
      uses: actions/checkout@v3 
    - name: Copy docker-compose.yml via ssh 
      uses: appleboy/scp-action@master 
      with: 
        host: ${{ secrets.HOST }} 
        username: ${{ secrets.USER }} 
        key: ${{ secrets.SSH_KEY }} 
        passphrase: ${{ secrets.SSH_PASSPHRASE }} 
        source: "docker-compose.production.yml" 
        target: "foodgram" 
    - name: Executing remote ssh commands to deploy 
      uses: appleboy/ssh-action@master 
      with: 
        host: ${{ secrets.HOST }} 
        username: ${{ secrets.USER }} 
        key: ${{ secrets.SSH_KEY }} 
        passphrase: ${{ secrets.SSH_PASSPHRASE }} 
        script: | 
          cd foodgram 
          # Выполняет pull образов с Docker Hub 
          sudo docker compose -f docker-compose.production.yml pull 
          # Перезапускает все контейнеры в Docker Compose 
          sudo docker compose -f docker-compose.production.yml down 
          sudo docker compose -f docker-compose.production.yml up -d 
          # Выполняет миграции и сбор статики 
          sudo docker compose -f docker-compose.production.yml exec backend python manage.py migrate 
          sudo docker compose -f docker-compose.production.yml exec backend python manage.py collectstatic
          sudo docker compose -f docker-compose.production.yml exec backend cp -r /app/static/. /static/ 
 
  send_message: 
    runs-on: ubuntu-latest 
    needs: deploy 
    steps: 
    - name: Send message 
      uses: appleboy/telegram-action@master 
      with: 
        to: ${{ secrets.TELEGRAM_TO }} 
        token: ${{ secrets.TELEGRAM_TOKEN }} 
        message: Деплой успешно выполнен!